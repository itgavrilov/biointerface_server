plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group = 'ru.gsa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

repositories {
    mavenCentral()
}

def slf4jVersion = '1.7.32'
def log4jVersion = '2.17.1'
def springBootVersion = '2.6.2'
def junitVersion = '5.8.2'
def lombokVersion = '1.18.22'

dependencies {
    // сахар дря разработки.
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    // Автоперезапуск проекта при изменении classpath
    developmentOnly("org.springframework.boot:spring-boot-devtools:$springBootVersion")
//-----------SerialPort----------------------
    implementation("com.fazecast:jSerialComm:2.7.0")
//-----------Logging------------------------
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("org.slf4j:jcl-over-slf4j:${slf4jVersion}"){
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    implementation("org.slf4j:jul-to-slf4j:${slf4jVersion}"){
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    implementation("org.apache.logging.log4j:log4j-api:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-core:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-web:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"){
        exclude group: "org.slf4j", module: "slf4j-api"
    }
//-----------Spring Date JPA-------------------
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    runtimeOnly("org.postgresql:postgresql:42.3.1")
//-----------Validator-----------------------
    implementation("org.springframework.boot:spring-boot-starter-validation:$springBootVersion")
//-----------Spring MVC---------------------
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
//    для JSP. JSP не поддерживается Spring Boot
//    implementation("javax.servlet:jstl:1.2")
//    implementation("org.apache.tomcat.embed:tomcat-embed-jasper:10.0.12")
//-----------Tests--------------------------
    implementation("org.springdoc:springdoc-openapi-ui:1.6.4")
//-----------Tests--------------------------
//    testImplementation('com.h2database:h2:2.0.202')
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:$junitVersion")
//    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

configurations.all {
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
}

test {
    useJUnitPlatform()
}