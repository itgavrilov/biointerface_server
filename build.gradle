plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'org.springdoc.openapi-gradle-plugin' version '1.4.0'
}

group = 'ru.gsa'
version = '0.0.1-SNAPSHOT'
targetCompatibility = JavaVersion.VERSION_16
sourceCompatibility = JavaVersion.VERSION_16

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

repositories {
    mavenCentral()
}

def slf4jVersion = '1.7.36'
def log4jVersion = '2.17.2'
def springBootVersion = '2.6.3'
def junitVersion = '5.8.2'
def lombokVersion = '1.18.22'
def mapstructVersion = '1.5.2.Final'

dependencies {
    // сахар дря разработки.
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    // Автоперезапуск проекта при изменении classpath
    developmentOnly("org.springframework.boot:spring-boot-devtools:$springBootVersion")
//-----------SerialPort----------------------
    implementation('com.fazecast:jSerialComm:2.9.1')
//-----------Logging------------------------
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.slf4j:jcl-over-slf4j:$slf4jVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    implementation("org.slf4j:jul-to-slf4j:$slf4jVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    implementation("org.apache.logging.log4j:log4j-api:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-core:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-web:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
//-----------Spring Date JPA-------------------
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    runtimeOnly('org.postgresql:postgresql:42.3.3')
    implementation("org.flywaydb:flyway-core:8.5.13")
//-----------Validator-----------------------
    implementation("org.springframework.boot:spring-boot-starter-validation:$springBootVersion")
//-----------Spring MVC---------------------
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
//-----------Mapstruct-----------------------
    implementation("org.mapstruct:mapstruct:$mapstructVersion")
    annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")
    implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")
//-----------Swagger --------------------------
    implementation('org.springdoc:springdoc-openapi-ui:1.6.6')
//----------- Jackson --------------------------
//    LocalDateTime Enhance JSR-310
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1")
//-----------Tests--------------------------
    implementation('com.h2database:h2:2.1.210')
    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    testImplementation("org.junit.vintage:junit-vintage-engine:$junitVersion")
    testImplementation("org.jeasy:easy-random-core:5.0.0")
}

configurations.all {
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
}

test {
    useJUnitPlatform()
}
