plugins {
    id 'java'
    id 'idea'
    id 'war'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group = 'ru.gsa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

repositories {
    mavenCentral()
}

//def slf4jVersion = '1.7.32'
def slf4jVersion = '2.0.0-alpha5'
def log4jVersion = '2.14.1'
def hibernateVersion = '5.6.1.Final'
def springVersion = '5.3.12'
def junitVersion = '5.8.1'

dependencies {
//-----------SerialPort----------------------
    implementation("com.fazecast:jSerialComm:2.7.0")
//-----------Logging------------------------
    implementation("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    implementation("org.apache.logging.log4j:log4j-api:${log4jVersion}")
    implementation("org.apache.logging.log4j:log4j-slf4j18-impl:${log4jVersion}") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
//    implementation("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
//    implementation("org.slf4j:jul-to-slf4j:${slf4jVersion}")
//-----------Database-----------------------
    implementation("org.springframework:spring-orm:${springVersion}")
    implementation("org.springframework.data:spring-data-jpa:2.5.6") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    implementation("org.apache.tomcat:tomcat-dbcp:10.1.0-M6")
    implementation("org.hibernate:hibernate-core:${hibernateVersion}")
    runtimeOnly("org.postgresql:postgresql:42.3.1")

    //runtimeOnly("com.github.gwenn:sqlite-dialect:0.1.2")
    //runtimeOnly("org.xerial:sqlite-jdbc:3.36.0.3")
// Annotation processor for metamodel for criteria api
    //annotationProcessor("javax.xml.bind:jaxb-api")
    //annotationProcessor("org.hibernate:hibernate-jpamodelgen:${hibernateVersion}")
//-----------Validator-----------------------
    implementation("org.hibernate:hibernate-validator:7.0.1.Final")
    implementation("javax.validation:validation-api:2.0.1.Final")
//-----------Spring-------------------------
    implementation("org.springframework:spring-core:${springVersion}")
    // создание новых обектов для контекста
    implementation("org.springframework:spring-beans:${springVersion}")
    // собственно сам контекст
    implementation("org.springframework:spring-context:${springVersion}")
    // PostConstruct и тд...
    implementation("javax.annotation:javax.annotation-api:1.3.2")
//-----------Spring MVC---------------------
    implementation("org.springframework:spring-webmvc:${springVersion}")
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')
//-----------Tests--------------------------
    testImplementation("com.h2database:h2:1.4.200")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}